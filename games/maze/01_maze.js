function charToAdd(char) {
  return char === "💣" ? char : char;
}
function join(array) {
  let mazeColumn = "";
  for (let column = 0; column < array.length; column++) {
    mazeColumn += charToAdd(array[column]); 
  }

  return mazeColumn;
}

function printMaze(maze, playerInfo, char) {
  let y = playerInfo[0];
  let x = playerInfo[1];
  let hitCount = playerInfo[2];

  maze[y][x] = char;
  console.log("\n");

  for (let row = 0; row < maze.length; row++) {
    console.log(join(maze[row]));
  }

  console.log(" Hit count : ", hitCount, "Bomb Count", playerInfo[3]);
}

function validate(instruction) {
  const instructions = ["a", "d", "w", "s", "quit"];
  const loweCaseInstruction = instruction.toLowerCase();

  if (instructions.includes(loweCaseInstruction)) {
    return loweCaseInstruction;
  }

  return "invalid";
}

function isBoundary(playerCoordinate, maze) {
  let y = playerCoordinate[0];
  let x = playerCoordinate[1];

  return maze[y][x] === "🟫";
}

function updateInfo(instruction, playerInfo, maze) {
  const validInstruction = validate(instruction);
  let y = playerInfo[0];
  let x = playerInfo[1];

  switch (validInstruction) {
    case "w":
      playerInfo[0] = playerInfo[0] - 1;
      break;
    case "s":
      playerInfo[0] = playerInfo[0] + 1;
      break;
    case "d":
      playerInfo[1] = playerInfo[1] + 1;
      break;
    case "a":
      playerInfo[1] = playerInfo[1] - 1;
      break;
    default:
      console.log("\n Invalid Instruction ❌ ")
      return [y, x, playerInfo[2], playerInfo[3]];
  }

  if (isBoundary(playerInfo, maze)) {
    playerInfo[2] += 1;
    console.log("\n There is the boundary there you can't move there ❌");
    return [y, x, playerInfo[2], playerInfo[3]];
  }

  return playerInfo;
}

function getInstruction() {
  const instruction = prompt(" [w-up, s-down, d-forward, a-backward] : ");
  return instruction;
}

function checkWin(playerInfo, maze) {
  const y = playerInfo[0];
  const x = playerInfo[1];

  if (maze[y][x] === "W") {
    printMaze(maze, playerInfo, "✅");
    return true;
  }

  return false;
}

function play(maze, playerInitialInfo) {
  let instruction = "";
  let playerInfo = playerInitialInfo;
  let y = playerInfo[0];
  let x = playerInfo[1];
  
  while (instruction !== "quit") {
    let bombCount = playerInfo[3];
    console.log(bombCount);
    printMaze(maze, playerInfo, "🐭");
    instruction = getInstruction();
    y = playerInfo[0];
    x = playerInfo[1];
    maze[y][x] = "  ";
    playerInfo = updateInfo(instruction, playerInfo, maze);

    if (checkWin(playerInfo, maze)) {
      console.log("\n You Found the W");
      console.log(" You won 🎉🎉🎉🎉🎉 \n");
      return;
    }

    if (maze[playerInfo[0]][playerInfo[1]] === "💣") {
      console.log("\n You have stepped on Bomb");
      playerInfo[3] += 1;
      maze[playerInfo[0]][playerInfo[1]] === "  "
    }

    if (playerInfo[2] > 5 || playerInfo[3] > 2) {
      console.log("\n You Lose");
      console.log(" You Better luck next time \n");
      return;
    }
  }
}

function getPattern() {
  const pattern1 = [
    ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫"],
    ["-", "-", "-", "-", "-", "-", "-", "-", "-"],
    ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫"]
  ];
  const pattern2 = [
    ["🟫", "💣", "🟫"],
    ["💣", "  ", "💣"],
    ["🟫", "  ", "🟫"]
  ];
  const pattern3 = [
    ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫"],
    ["🟫", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "🟫"],
    ["🟫", "  ", "🟫", "💣", "  ", "🟫", "  ", "🟫", "  ", "🟫"],
    ["🟫", "  ", "🟫", "🟫", "  ", "  ", "  ", "🟫", "  ", "🟫"],
    ["🟫", "  ", "  ", "  ", "🟫", "🟫", "🟫", "🟫", "  ", "🟫"],
    ["🟫", "🙂", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "W", "🟫"],
    ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫"],
  ];
  const pattern4 = [
    ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫"],
    ["🟫", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "🟫"],
    ["🟫", "  ", "🟫", "🥹", "  ", "🟫", "  ", "🟫", "  ", "🟫"],
    ["🟫", "  ", "🟫", "🟫", "  ", "  ", "  ", "🟫", "  ", "🟫"],
    ["🟫", "  ", "  ", "  ", "🟫", "🟫", "🟫", "🟫", "  ", "🟫"],
    ["🟫", "🙂", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "W", "🟫"],
    ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫"],
  ];
  const pattern5 = [
    ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫"],
    ["🟫", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "🟫", "🟫"],
    ["🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "🟫"],
    ["🟫", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "  ", "🟫"],
    ["🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫"],
    ["🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫"],
    ["🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "  ", "🟫"],
    ["🟫", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "🟫"],
    ["🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫"],
    ["🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "🟫"],
    ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫"],
    ["🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫"],
    ["🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫"],
    ["🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "🟫"],
    ["🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "🟫"],
    ["🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "🟫"],
    ["🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫"],
    ["🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "W", "🟫"],
    ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫"],
    ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫"]
  ];
  const pattern6 = [
    ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫"],
    ["🟫", "🐭", "  ", "🟫", "🟫", "🟫", "🟫", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "💣", "  ", "🟫"],
    ["🟫", "  ", "  ", "🟫", "  ", "  ", "  ", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "  ", "🟫"],
    ["🟫", "  ", "🟫", "🟫", "  ", "🟫", "🟫", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "🟫", "💣", "  ", "🟫", "  ", "🟫"],
    ["🟫", "  ", "🟫", "  ", "  ", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫"],
    ["🟫", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫"],
    ["🟫", "💣", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "  ", "🟫"],
    ["🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫"],
    ["🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫"],
    ["🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫"],
    ["🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫"],
    ["🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫"],
    ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "  ", "🟫"],
    ["🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫"],
    ["🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "  ", "🟫"],
    ["🟫", "  ", "🟫", "💣", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫"],
    ["🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫"],
    ["🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🙂", "🟫"],
    ["🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫"],
    ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫"]
  ];
  const pattern7 = [
    // 0         1         2         3         4
    // 0123456789012345678901234567890123456789
    ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫"], // R0
    ["🟫", "🐭", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "🟫", "💣", "🟫", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "🟫"], // R1
    ["🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "💣", "  ", "  ", "🟫"], // R2
    ["🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫"], // R3
    ["🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "💣", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫"], // R4
    ["🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫"], // R5
    ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "💣", "  ", "🟫"], // R6
    ["🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫"], // R7
    ["🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "💣", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫"], // R8
    ["🟫", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫"], // R9
    ["🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫"], // R10
    ["🟫", "💣", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫"], // R11
    ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "💣", "🟫", "  ", "🟫"], // R12
    ["🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫"], // R13
    ["🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "💣", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "💣", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫"], // R14
    ["🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫"], // R15
    ["🟫", "  ", "  ", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "W", "🟫"], // R16
    ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫"]  // R17
  ];
  const pattern8 = [
  // 0         1         2         3         4
  // 0123456789012345678901234567890123456789
  ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫"], // R0
  ["🟫", "🐭", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "🟫"], // R1
  ["🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "💣", "  ", "  ", "🟫"], // R2
  ["🟫", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫"], // R3
  ["🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "💣", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫"], // R4
  ["🟫", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫"], // R5
  ["🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫"], // R6
  ["🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫"], // R7
  ["🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "💣", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫"], // R8
  ["🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫"], // R9
  ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "💣", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫"], // R10
  ["🟫", "💣", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫"], // R11
  ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "💣", "🟫", "  ", "🟫"], // R12
  ["🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫"], // R13
  ["🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "💣", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫"], // R14
  ["🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫"], // R15
  ["🟫", "  ", "  ", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "W", "🟫"], // R16
  ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫"]  // R17
];

const pattern9 = [
  // 0         1         2         3         4
  // 0123456789012345678901234567890123456789
  ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫"], // R0
  ["🟫", "🐭", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "🟫", "💣", "  ", "  ", "🟫", "  ", "🟫", "💣", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "💣", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "🟫"], // R1
  ["🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "💣", "  ", "  ", "🟫"], // R2 (1 B)
  ["🟫", "  ", "💣", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "💣", "  ", "💣", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "💣", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫"], // R3 (4 B's)
  ["🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "💣", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫"], // R4 (1 B)
  ["🟫", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "💣", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "💣", "  ", "💣", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫"], // R5 (4 B's)
  ["🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫"], // R6
  ["🟫", "💣", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "💣", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "💣", "  ", "  ", "  ", "  ", "  ", "💣", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫"], // R7 (4 B's)
  ["🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "💣", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫"], // R8 (1 B)
  ["🟫", "  ", "💣", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "💣", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "💣", "  ", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "💣", "  ", "  ", "💣", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫"], // R9 (5 B's)
  ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "💣", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫"], // R10 (1 B)
  ["🟫", "💣", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "💣", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "💣", "  ", "  ", "  ", "  ", "  ", "  ", "🟫"], // R11 (2 B's)
  ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "💣", "🟫", "  ", "🟫"], // R12 (1 B)
  ["🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "💣", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "💣", "  ", "  ", "  ", "  ", "💣", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫"], // R13 (3 B's)
  ["🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "💣", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫"], // R14 (1 B)
  ["🟫", "💣", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "💣", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "💣", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "💣", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "💣", "🟫"], // R15 (5 B's)
  ["🟫", "  ", "💣", "💣", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "😎", "🟫"], // R16 (2 B's)
  ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫"]  // R17
];

const pattern10 = [
  // 0         1         2         3         4         5
  // 01234567890123456789012345678901234567890123456789
  ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫"], // R0
  ["🟫", "🐭", "  ", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ","🟫"], // R1
  ["🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "  ", "  ","🟫"], // R2
  ["🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "🟫", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ","🟫"], // R3
  ["🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "  ","🟫"], // R4
  ["🟫", "  ", "🟫", "💣", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "🟫", "💣", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ","🟫"], // R5
  ["🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "  ","🟫"], // R6
  ["🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ","🟫"], // R7
  ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "💣", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ","🟫"], // R8
  ["🟫", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ","🟫"], // R9
  ["🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "💣", "🟫", "  ", "🟫", "  ", "  ","🟫"], // R10
  ["🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ","🟫"], // R11
  ["🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "💣","🟫"], // R12
  ["🟫", "  ", "💣", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ","🟫"], // R13
  ["🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "💣", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "💣", "🟫", "  ", "  ","🟫"], // R14
  ["🟫", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ","🟫"], // R15
  ["🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "  ","🟫"], // R16
  ["🟫", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ","🟫"], // R17
  ["🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "  ", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "💣", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "🟫", "🟫", "🟫", "  ", "  ","🟫"], // R18
  ["🟫", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "💣", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "  ", "💣", "  ", "  ", "  ", "  ", "  ", "  ","🟫"], // R19
  ["🟫", "  ", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "  ","W"], // R20
  ["🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫", "🟫","🟫"]  // R21
];

  return pattern9;
}

function main() {
  const pattern = getPattern();
  const playerInitialInfo = [1, 1, 0, 0]
  play(pattern, playerInitialInfo);
}

main();
